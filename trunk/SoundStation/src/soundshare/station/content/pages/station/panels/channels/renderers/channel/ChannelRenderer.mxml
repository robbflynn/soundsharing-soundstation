<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
				currentState="{channelContext.status == 0 ? 'offline' : 'online'}">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			import soundshare.station.content.pages.station.panels.channels.renderers.channel.events.ChannelRendererEvent;
			import soundshare.station.data.channels.ChannelContext;
			
			[Bindable] private var channelContext:ChannelContext;
			[Bindable] private var genre:String;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				if (value && value as ChannelContext)
				{
					channelContext = value as ChannelContext;
					
					if (!channelContext.genre)
						genre = "Unknown";
					
					genre = String(channelContext.genre).split(",").join(", ");
				}
			}
			
			protected function editChannel():void
			{
				dispatchEvent(new ChannelRendererEvent(ChannelRendererEvent.EDIT, channelContext));
			}
			
			protected function broadcastChannel():void
			{
				dispatchEvent(new ChannelRendererEvent(ChannelRendererEvent.BROADCAST, channelContext));
			}
			
			protected function invateChannel():void
			{
				dispatchEvent(new ChannelRendererEvent(ChannelRendererEvent.INVATE, channelContext));
			}
			
			protected function deleteChannel():void
			{
				Alert.show("Are you sure?", "Delete channel", Alert.YES | Alert.NO, null, executeDeleteClient);
			}
			
			private function executeDeleteClient(e:CloseEvent):void
			{
				if (e.detail == Alert.YES)
					dispatchEvent(new ChannelRendererEvent(ChannelRendererEvent.DELETE, channelContext));
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="online" />
		<s:State name="offline" />
	</s:states>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0xffffff" />
		</s:fill>
	</s:Rect>
	
	<s:Rect width="100%" height="100%">
		<s:stroke>
			<s:SolidColorStroke color="0xb7babc" />
		</s:stroke>
	</s:Rect>
	
	<s:VGroup gap="0" width="100%">
		
		<s:Group width="100%" height="60">
			
			<s:Rect left="4" right="4" top="4" bottom="4">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:entries>
							<s:GradientEntry color="0x233d64" ratio="0.00" />
							<s:GradientEntry color="0x020304" ratio="1" />
						</s:entries>
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			
			<s:HGroup left="20" verticalCenter="0" gap="18" verticalAlign="middle">
				
				<s:VGroup>
					<s:HGroup includeIn="online" verticalAlign="middle" left="5" verticalCenter="0">
						<s:Rect width="12" height="12" radiusX="6" radiusY="6">
							<s:fill>
								<s:SolidColor color="0x14c114" />
							</s:fill>
						</s:Rect>
					</s:HGroup>
					
					<s:HGroup includeIn="offline" verticalAlign="middle" left="5" verticalCenter="0">
						<s:Rect width="12" height="12" radiusX="6" radiusY="6">
							<s:fill>
								<s:SolidColor color="0xe41a1a" />
							</s:fill>
						</s:Rect>
					</s:HGroup>
				</s:VGroup>
				
				<s:VGroup>
					<s:Label text="Name: {channelContext.name}" color="0xFFFFFF" />
					<s:Label text="Genre: {genre}" color="0xFFFFFF" />
				</s:VGroup>
				
			</s:HGroup>
			
			<!--<s:Label text="{channelContext.broadcastType}" color="0xFFFFFF" right="20" verticalCenter="1" />-->
			
			<s:HGroup right="20" verticalCenter="1">
				<s:Button label="Send invitation(s)" click="invateChannel()" />
				<s:Button label="Settings" click="editChannel()" />
				<s:Button label="Broadcast"  
						  click="broadcastChannel()"/>
				<s:Button label="Delete" click="deleteChannel()" enabled="{channelContext.status == 0}" />
			</s:HGroup>
			
		</s:Group>
		
	</s:VGroup>
	
</s:ItemRenderer>