<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 title="Register station">
	
	<fx:Metadata>
		[Event(name="complete", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;
			
			import soundshare.sdk.db.mongo.base.events.MongoDBRestEvent;
			import soundshare.sdk.db.mongo.stations.StationsDataManager;
			import soundshare.station.content.pages.station.panels.stations.panels.AddStationPanel;
			import soundshare.station.content.pages.station.panels.stations.panels.selectors.SelectStationPanel;
			import soundshare.station.data.StationContext;
			import soundshare.station.data.stations.StationData;
			
			import spark.components.Application;
			
			[Bindable] private var context:StationContext;
			
			private var selectStationPanel:SelectStationPanel;
			private var addStationPanel:AddStationPanel;
			
			public function init(context:StationContext):void
			{
				this.context = context;
				
				selectStationPanel = new SelectStationPanel();
				selectStationPanel.addEventListener(Event.SELECT, onSelectStationComplete);
				selectStationPanel.init(context);
				
				addStationPanel = new AddStationPanel();
				addStationPanel.addEventListener(Event.COMPLETE, onAddStationComplete);
				addStationPanel.init(context);
			}
			
			public function show():void
			{
				PopUpManager.addPopUp(this, FlexGlobals.topLevelApplication as Application, true);
				PopUpManager.centerPopUp(this);
			}
			
			protected function close():void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function onAddStationComplete(e:Event):void
			{
				trace("onAddStationComplete");
				
				close();
				dispatchEvent(new Event(Event.COMPLETE));
			}
			
			private function onSelectStationComplete(e:Event):void
			{
				trace("onSelectStationComplete");
				context.applicationSettings.settings.stationId = (e.currentTarget as SelectStationPanel).stationData._id;
				context.applicationSettings.save();
				
				close();
				dispatchEvent(new Event(Event.COMPLETE));
			}
			
			protected function selectStation():void
			{
				selectStationPanel.show();
			}
			
			protected function enterAsWathcer():void
			{
				trace("enterAsWathcer");
				
				context.stationData = new StationData();
				context.stationData._id = context.applicationSettings.settings.guestStationId;
				context.stationData.name = "Guest";
				
				context.applicationSettings.settings.stationId = context.applicationSettings.settings.guestStationId;
				context.applicationSettings.save();
				
				close();
				dispatchEvent(new Event(Event.COMPLETE));
			}
			
			protected function register():void
			{
				addStationPanel.show();
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup paddingBottom="15" paddingLeft="15" paddingTop="15" paddingRight="15">
		
		<s:Button label="Register" click="register()" width="300" height="40" />
		<s:Button label="Enter as watcher" click="enterAsWathcer()" width="300" height="40"/>
		<s:Button label="Select existing station" click="selectStation()" width="300" height="40"/>
		
	</s:VGroup>
	
</s:Panel>
